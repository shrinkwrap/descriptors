<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://java.sun.com/xml/ns/javaee"
            xmlns:javaee="http://java.sun.com/xml/ns/javaee"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:xml="http://www.w3.org/XML/1998/namespace"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified"
            version="2.0">
  <xsd:annotation>
    <xsd:documentation>

      DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
      
      Copyright 2003-2009 Sun Microsystems, Inc. All rights reserved.
      
      The contents of this file are subject to the terms of either the
      GNU General Public License Version 2 only ("GPL") or the Common
      Development and Distribution License("CDDL") (collectively, the
      "License").  You may not use this file except in compliance with
      the License. You can obtain a copy of the License at
      https://glassfish.dev.java.net/public/CDDL+GPL.html or
      glassfish/bootstrap/legal/LICENSE.txt.  See the License for the
      specific language governing permissions and limitations under the
      License.
      
      When distributing the software, include this License Header
      Notice in each file and include the License file at
      glassfish/bootstrap/legal/LICENSE.txt.  Sun designates this
      particular file as subject to the "Classpath" exception as
      provided by Sun in the GPL Version 2 section of the License file
      that accompanied this code.  If applicable, add the following
      below the License Header, with the fields enclosed by brackets []
      replaced by your own identifying information:
      "Portions Copyrighted [year] [name of copyright owner]"
      
      Contributor(s):
      
      If you wish your version of this file to be governed by only the
      CDDL or only the GPL Version 2, indicate your decision by adding
      "[Contributor] elects to include this software in this
      distribution under the [CDDL or GPL Version 2] license."  If you
      don't indicate a single choice of license, a recipient has the
      option to distribute your version of this file under either the
      CDDL, the GPL Version 2 or to extend the choice of license to its
      licensees as provided above.  However, if you add GPL Version 2
      code and therefore, elected the GPL Version 2 license, then the
      option applies only if the new code is made subject to such
      option by the copyright holder.
      
    </xsd:documentation>
  </xsd:annotation>

  <xsd:annotation>
    <xsd:documentation>

      The XML Schema for the JavaServer Faces (Version 2.0)  
      Partial Response used in JSF Ajax frameworks.
      
    </xsd:documentation>
  </xsd:annotation>

  <xsd:include schemaLocation="javaee_5.xsd"/>


<!-- **************************************************** -->

  <xsd:element name="partial-response"
               type="javaee:partial-responseType">
    <xsd:annotation>
      <xsd:documentation>

        The "partial-response" element is the root of the partial 
        response information hierarchy, and contains nested elements for all
        possible elements that can exist in the response. 
        
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>


<!-- **************************************************** -->

  <xsd:complexType name="partial-responseType">
    <xsd:annotation>
      <xsd:documentation>

        The "partial-response" element is the root of thei partial 
        response information hierarchy, and contains nested elements for all
        possible elements that can exist in the response. 
        
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="changes"
                   type="javaee:partial-response-changesType"
                   minOccurs="0"
                   maxOccurs="1"/>
      <xsd:element name="redirect"
                   type="javaee:partial-response-redirectType"
                   minOccurs="0"
                   maxOccurs="1"/>
      <xsd:element name="error"
                   type="javaee:partial-response-errorType"
                   minOccurs="0"
                   maxOccurs="1"/>
    </xsd:choice>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="partial-response-changesType">
    <xsd:choice minOccurs="0"
                maxOccurs="unbounded">
      <xsd:element name="update"
                   type="javaee:partial-response-updateType"/>
      <xsd:element name="insert"
                   type="javaee:partial-response-insertType"/>
      <xsd:element name="delete"
                   type="javaee:partial-response-deleteType"/>
      <xsd:element name="attributes"
                   type="javaee:partial-response-attributesType"/>
      <xsd:element name="eval"
                   type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>

            The "eval" element enables this element's contents to be executed as JavaScript.
            
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="extension"
                   type="javaee:partial-response-extensionType"/>
    </xsd:choice>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="partial-response-updateType">
    <xsd:annotation>
      <xsd:documentation>

        The "update" element enables DOM elements matching the "id"
        attribute to be updated with the contents of this element. 
        
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="id"
                       type="xsd:string"
                       use="required"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="partial-response-insertType">
    <xsd:annotation>
      <xsd:documentation>

        The "insert" element enables content to be inserted into the DOM
        before or after an existing DOM element as specified by the
        nested "before" or "after" elements.  The elements "before" and
        "after" are mutually exclusive - one of them must be specified. 
        
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="1"
                maxOccurs="1">
      <xsd:element name="before">

<!-- **************************************************** -->

        <xsd:complexType>
          <xsd:attribute name="id"
                         type="xsd:string"
                         use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="after">

<!-- **************************************************** -->

        <xsd:complexType>
          <xsd:attribute name="id"
                         type="xsd:string"
                         use="required"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="partial-response-deleteType">
    <xsd:annotation>
      <xsd:documentation>

        The "delete" element enables DOM elements matching the "id"
        attribute to be removed. 
        
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="id"
                   type="xsd:string"
                   use="required"/>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="partial-response-attributesType">
    <xsd:annotation>
      <xsd:documentation>

        The "attributes" element enables attributes of DOM elements matching the "id"
        attribute to be updated.  If this element is used, then it must contain at
        least one "attribute" element. 
        
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="attribute"
                   minOccurs="1"
                   maxOccurs="unbounded">

<!-- **************************************************** -->

        <xsd:complexType>
          <xsd:attribute name="name"
                         type="xsd:string"
                         use="required"/>
          <xsd:attribute name="value"
                         type="xsd:string"
                         use="required"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="id"
                   type="xsd:string"
                   use="required"/>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="partial-response-redirectType">
    <xsd:annotation>
      <xsd:documentation>

        The "redirect" element enables a redirect to the location as specified by the
        "url" attribute. 
        
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="url"
                   type="xsd:anyURI"
                   use="required"/>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="partial-response-errorType">
    <xsd:annotation>
      <xsd:documentation>

        The "error" element contains error information from the server. 
        
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="error-name"
                   type="xsd:string"
                   minOccurs="1"
                   maxOccurs="1"/>
      <xsd:element name="error-message"
                   type="xsd:string"
                   minOccurs="1"
                   maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="partial-response-extensionType">
    <xsd:annotation>
      <xsd:documentation>

        Extension element for partial response.  It may contain
        implementation specific content.
        
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any namespace="##any"
               processContents="lax"
               minOccurs="0"
               maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id"
                   type="xsd:ID"/>
  </xsd:complexType>

</xsd:schema>
