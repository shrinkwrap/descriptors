<?xml version="1.0" encoding="UTF-8"?>
<!--
  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  
  Copyright 2000-2007 Sun Microsystems, Inc. All rights reserved.
  
  The contents of this file are subject to the terms of either the GNU
  General Public License Version 2 only ("GPL") or the Common Development
  and Distribution License("CDDL") (collectively, the "License").  You
  may not use this file except in compliance with the License. You can obtain
  a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
  or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
  language governing permissions and limitations under the License.
  
  When distributing the software, include this License Header Notice in each
  file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
  Sun designates this particular file as subject to the "Classpath" exception
  as provided by Sun in the GPL Version 2 section of the License file that
  accompanied this code.  If applicable, add the following below the License
  Header, with the fields enclosed by brackets [] replaced by your own
  identifying information: "Portions Copyrighted [year]
  [name of copyright owner]"
  
  Contributor(s):
  
  If you wish your version of this file to be governed by only the CDDL or
  only the GPL Version 2, indicate your decision by adding "[Contributor]
  elects to include this software in this distribution under the [CDDL or GPL
  Version 2] license."  If you don't indicate a single choice of license, a
  recipient has the option to distribute your version of this file under
  either the CDDL, the GPL Version 2 or to extend the choice of license to
  its licensees as provided above.  However, if you add GPL Version 2 code
  and therefore, elected the GPL Version 2 license, then the option applies
  only if the new code is made subject to such option by the copyright
  holder.
-->
<!--
  This is the XML DTD for the Connector 1.0 deployment descriptor.
  All Connector 1.0 deployment descriptors must include a DOCTYPE
  of the following form:
  
    <!DOCTYPE connector PUBLIC
  	"-//Sun Microsystems, Inc.//DTD Connector 1.0//EN"
  	"http://java.sun.com/dtd/connector_1_0.dtd">
  
-->
<!--
  The following conventions apply to all J2EE deployment descriptor
  elements unless indicated otherwise.
  
  - In elements that contain PCDATA, leading and trailing whitespace
    in the data may be ignored.
  
  - In elements whose value is an "enumerated type", the value is
    case sensitive.
  
  - In elements that specify a pathname to a file within the same
    JAR file, relative filenames (i.e., those not starting with "/")
    are considered relative to the root of the JAR file's namespace.
    Absolute filenames (i.e., those starting with "/") also specify
    names in the root of the JAR file's namespace.  In general, relative
    names are preferred.  The exception is .war files where absolute
    names are preferred for consistency with the servlet API.
-->
<!--
  The connector element is the root element of the deployment descriptor
  for the resource adapter. This element includes general information - vendor
  name, version, specification version supported, icon -  about the
  resource adapter module. It also includes information specific to the
  implementation of the resource adapter library as specified through
  the element resourceadapter.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="connector">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="display-name"/>
        <xs:element minOccurs="0" ref="description"/>
        <xs:element minOccurs="0" ref="icon"/>
        <xs:element ref="vendor-name"/>
        <xs:element ref="spec-version"/>
        <xs:element ref="eis-type"/>
        <xs:element ref="version"/>
        <xs:element minOccurs="0" ref="license"/>
        <xs:element ref="resourceadapter"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.connector"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element authentication-mechanism specifies an authentication mechanism
    supported by the resource adapter. Note that this support is for
    the resource adapter and not for the underlying EIS instance. The
    optional description specifies any resource adapter specific requirement
    for the support of security contract and authentication mechanism.
    
    Note that BasicPassword mechanism type should support the
    javax.resource.spi.security.PasswordCredential interface.
    The Kerbv5 mechanism type should support the
    javax.resource.spi.security.GenericCredential interface.
    
    Used in: resourceadapter
  -->
  <xs:element name="authentication-mechanism">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="description"/>
        <xs:element ref="authentication-mechanism-type"/>
        <xs:element ref="credential-interface"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.authentication-mechanism"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element authentication-mechanism-type specifies type of an authentication
    mechanism.
    
    The example values are:
       <authentication-mechanism-type>BasicPassword
                       </authentication-mechanism-type>
       <authentication-mechanism-type>Kerbv5
                       </authentication-mechanism-type>
    
    Any additional security mechanisms are outside the scope of the
    Connector architecture specification.
    
    Used in: authentication-mechanism
  -->
  <xs:element name="authentication-mechanism-type">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.authentication-mechanism-type"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element config-property contains a declaration of a single
    configuration property for a ManagedConnectionFactory instance.
    
    Each ManagedConnectionFactory instance creates connections to a
    specific EIS instance based on the properties configured on the
    ManagedConnectionFactory instance. The configurable properties are
    specified only once in the deployment descriptor, even though a
    resource adapter can be used to configure multiple ManagedConnnection-
    Factory instances (that create connections to different instances of
    the same EIS).
    
    The declaration consists of an optional description, name, type
    and an optional value of the configuration property. If the resource
    adapter provider does not specify a value than the deployer is
    responsible for providing a valid value for a configuration property.
    
    Any bounds or well-defined values of properties should be described
    in the description element.
    
    Used in: resourceadapter
  -->
  <xs:element name="config-property">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="description"/>
        <xs:element ref="config-property-name"/>
        <xs:element ref="config-property-type"/>
        <xs:element minOccurs="0" ref="config-property-value"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.config-property"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element config-property-name contains the name of a configuration
    property.
    
    The connector architecture defines a set of well-defined properties
    all of type java.lang.String. These are as follows:
         <config-property-name>ServerName</config-property-name>
         <config-property-name>PortNumber</config-property-name>
         <config-property-name>UserName</config-property-name>
         <config-property-name>Password</config-property-name>
         <config-property-name>ConnectionURL</config-property-name>
    
    A resource adapter provider can extend this property set to include
    properties specific to the resource adapter and its underlying EIS.
    
    Used in: config-property
    
    Example: <config-property-name>ServerName</config-property-name>
  -->
  <xs:element name="config-property-name">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.config-property-name"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element config-property-type contains the fully qualified Java
    type of a configuration property as required by ManagedConnection-
    Factory instance.
    
    The following are the legal values of config-property-type:
       java.lang.Boolean, java.lang.String, java.lang.Integer,
       java.lang.Double, java.lang.Byte, java.lang.Short,
       java.lang.Long, java.lang.Float, java.lang.Character
    
    Used in: config-property
    
    Example: <config-property-type>java.lang.String</config-property-type>
  -->
  <xs:element name="config-property-type">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.config-property-type"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element config-property-value contains the value of a configuration
    entry.
    
    Used in: config-property
    
    Example: <config-property-value>WombatServer</config-property-value>
  -->
  <xs:element name="config-property-value">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.config-property-value"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element connection-impl-class specifies the fully-qualified
    name of the Connection class that implements resource adapter
    specific Connection interface.
    
    Used in: resourceadapter
    
    Example: <connection-impl-class>com.wombat.ConnectionImpl
             </connection-impl-class>
  -->
  <xs:element name="connection-impl-class">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.connection-impl-class"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element connection-interface specifies the fully-qualified
    name of the Connection interface supported by the resource
    adapter.
    
    Used in: resourceadapter
    
    Example: <connection-interface>javax.resource.cci.Connection
             </connection-interface>
  -->
  <xs:element name="connection-interface">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.connection-interface"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element connectionfactory-impl-class specifies the fully-qualified
    name of the ConnectionFactory class that implements resource adapter
    specific ConnectionFactory interface.
    
    Used in: resourceadapter
    
    Example: <connectionfactory-impl-class>com.wombat.ConnectionFactoryImpl
             </connectionfactory-impl-class>
  -->
  <xs:element name="connectionfactory-impl-class">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.connectionfactory-impl-class"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element connectionfactory-interface specifies the fully-qualified
    name of the ConnectionFactory interface supported by the resource
    adapter.
    
    Used in: resourceadapter
    
    Example: <connectionfactory-interface>com.wombat.ConnectionFactory
             </connectionfactory-interface>
    OR
    <connectionfactory-interface>javax.resource.cci.ConnectionFactory
             </connectionfactory-interface>
  -->
  <xs:element name="connectionfactory-interface">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.connectionfactory-interface"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element credential-interface specifies the interface that the
    resource adapter implementation supports for the representation
    of the credentials. This element should be used by application server
    to find out the Credential interface it should use as part of the
    security contract.
    
    The possible values are:
       <credential-interface>javax.resource.spi.security.PasswordCredential
            </credential-interface>
       <credential-interface>javax.resource.spi.security.GenericCredential
            </credential-interface>
    
    Used in: authentication-mechanism
  -->
  <xs:element name="credential-interface">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.credential-interface"/>
    </xs:complexType>
  </xs:element>
  <!--
    The description element is used to provide text describing the parent
    element.  The description element should include any information that
    the resource adapter rar file producer wants to provide to the consumer of
    the resource adapter rar file (i.e., to the Deployer). Typically, the tools
    used by the resource adapter rar file consumer will display the description
    when processing the parent element that contains the description.
    
    Used in: authentication-mechanism, config-property, connector, license,
    security-permission
  -->
  <xs:element name="description">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.description"/>
    </xs:complexType>
  </xs:element>
  <!--
    The display-name element contains a short name that is intended to be
    displayed by tools.  The display name need not be unique.
    
    Used in: connector
    
    Example:
    
    <display-name>Employee Self Service</display-name>
  -->
  <xs:element name="display-name">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.display-name"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element eis-type contains information about the type of the
    EIS. For example, the type of an EIS can be product name of EIS
    independent of any version info.
    
    This helps in identifying EIS instances that can be used with
    this resource adapter.
    
    Used in: connector
  -->
  <xs:element name="eis-type">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.eis-type"/>
    </xs:complexType>
  </xs:element>
  <!--
    The icon element contains small-icon and large-icon elements that
    specify the file names for small and a large GIF or JPEG icon images
    used to represent the parent element in a GUI tool.
    
    Used in: connector
  -->
  <xs:element name="icon">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="small-icon"/>
        <xs:element minOccurs="0" ref="large-icon"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.icon"/>
    </xs:complexType>
  </xs:element>
  <!--
    The large-icon element contains the name of a file
    containing a large (32 x 32) icon image. The file
    name is a relative path within the resource adapter's
    rar file.
    
    The image may be either in the JPEG or GIF format.
    The icon can be used by tools.
    
    Used in: icon
    
    Example:
    
    <large-icon>employee-service-icon32x32.jpg</large-icon>
  -->
  <xs:element name="large-icon">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.large-icon"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element license specifies licensing requirements for the resource
    adapter module. This element specifies whether a license is required
    to deploy and use this resource adapter, and an optional description
    of the licensing terms (examples: duration of license, number of
    connection restrictions).
    
    Used in: connector
  -->
  <xs:element name="license">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="description"/>
        <xs:element ref="license-required"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.license"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element license-required specifies whether a license is required
    to deploy and use the resource adapter. This element must be one of
    the following:
    
    	<license-required>true</license-required>
    	<license-required>false</license-required>
    
    Used in: license
  -->
  <xs:element name="license-required">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.license-required"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element managedconnectionfactory-class specifies the fully qualified
    name of the Java class that implements the javax.resource.spi.Managed-
    ConnectionFactory interface. This Java class is provided as part of
    resource adapter's implementation of connector architecture specified
    contracts.
    
    Used in: resourceadapter
    
    Example:
      <managedconnectionfactory-class>com.wombat.ManagedConnectionFactoryImpl
      </managedconnectionfactory-class>
  -->
  <xs:element name="managedconnectionfactory-class">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.managedconnectionfactory-class"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element reauthentication-support specifies whether the resource
    adapter implementation supports re-authentication of existing Managed-
    Connection instance. Note that this information is for the resource
    adapter implementation and not for the underlying EIS instance.
    
    This element must be one of the following:
            <reauthentication-support>true</reauthentication-support>
            <reauthentication-support>false</reauthentication-support>
    Used in: resourceadapter
  -->
  <xs:element name="reauthentication-support">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.reauthentication-support"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element resourceadapter specifies information about the resource
    adapter. The information includes fully-qualified names of
    class/interfaces required as part of the connector architecture
    specified contracts, level of transaction support provided,
    configurable properties for ManagedConnectionFactory instances,
    one or more authentication mechanisms supported and additional
    required security permissions.
    
    If there is no authentication-mechanism specified as part of
    resource adapter element then the resource adapter does not
    support any standard security authentication mechanisms as part
    of security contract. The application server ignores the security
    part of the system contracts in this case.
    
    Used in: connector
  -->
  <xs:element name="resourceadapter">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="managedconnectionfactory-class"/>
        <xs:element ref="connectionfactory-interface"/>
        <xs:element ref="connectionfactory-impl-class"/>
        <xs:element ref="connection-interface"/>
        <xs:element ref="connection-impl-class"/>
        <xs:element ref="transaction-support"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="config-property"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="authentication-mechanism"/>
        <xs:element ref="reauthentication-support"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="security-permission"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.resourceadapter"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element security permission specifies a security permission that
    is required by the resource adapter code.
    
    The security permission listed in the deployment descriptor are ones
    that are different from those required by the default permission set
    as specified in the connector specification. The optional description
    can mention specific reason that resource adapter requires a given
    security permission.
    
    Used in: resourceadapter
  -->
  <xs:element name="security-permission">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="description"/>
        <xs:element ref="security-permission-spec"/>
      </xs:sequence>
      <xs:attributeGroup ref="attlist.security-permission"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element permission-spec specifies a security permission based
    on the Security policy file syntax. Refer to the following URL for
    Sun's implementation of the security permission specification:
    
    http://java.sun.com/products/jdk/1.3/docs/guide/security/PolicyFiles.html#FileSyntax
    
    Used in: security-permission
  -->
  <xs:element name="security-permission-spec">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.security-permission-spec"/>
    </xs:complexType>
  </xs:element>
  <!--
    The small-icon element contains the name of a file
    containing a small (16 x 16) icon image. The file
    name is a relative path within the resource adapter's
    rar file.
    
    The image may be either in the JPEG or GIF format.
    The icon can be used by tools.
    
    Used in: icon
    
    Example:
    
    <small-icon>employee-service-icon16x16.jpg</small-icon>
  -->
  <xs:element name="small-icon">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.small-icon"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element spec-version specifies the version of the connector
    architecture specification that is supported by this resource
    adapter. This information enables deployer to configure the resource
    adapter to support deployment and runtime requirements of the
    corresponding connector architecture specification.
    
    Used in: connector
    
    Example:
      <spec-version>1.0</spec-version>
  -->
  <xs:element name="spec-version">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.spec-version"/>
    </xs:complexType>
  </xs:element>
  <!--
    The transaction-support element specifies the level of transaction
    support provided by the resource adapter.
    The value of transaction-support must be one of the following:
     <transaction-support>NoTransaction</transaction-support>
     <transaction-support>LocalTransaction</transaction-support>
     <transaction-support>XATransaction</transaction-support>
    
    Used in: resourceadapter
  -->
  <xs:element name="transaction-support">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.transaction-support"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element vendor-name specifies the name of resource adapter provider
    vendor.
    
    Used in: connector
    
    Example:
      <vendor-name>Wombat Corp.</vendor-name>
  -->
  <xs:element name="vendor-name">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.vendor-name"/>
    </xs:complexType>
  </xs:element>
  <!--
    The element version specifies a string-based version of the
    resource adapter from the resource adapter provider.
    
    Used in: connector
    
    Example:
      <version>1.0</version>
  -->
  <xs:element name="version">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="attlist.version"/>
    </xs:complexType>
  </xs:element>
  <!--
    The ID mechanism is to allow tools that produce additional deployment
    information (i.e., information beyond the standard deployment
    descriptor information) to store the non-standard information in a
    separate file, and easily refer from these tool-specific files to the
    information in the standard deployment descriptor.
    
    Tools are not allowed to add the non-standard information into the
    standard deployment descriptor.
  -->
  <xs:attributeGroup name="attlist.authentication-mechanism">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.authentication-mechanism-type">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.config-property">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.config-property-name">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.config-property-type">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.config-property-value">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.connection-impl-class">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.connection-interface">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.connectionfactory-impl-class">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.connectionfactory-interface">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.connector">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.credential-interface">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.description">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.display-name">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.eis-type">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.icon">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.large-icon">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.license">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.license-required">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.managedconnectionfactory-class">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.reauthentication-support">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.resourceadapter">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.security-permission">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.security-permission-spec">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.small-icon">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.spec-version">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.transaction-support">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.vendor-name">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attlist.version">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
</xs:schema>
