<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
  targetNamespace="http://java.sun.com/xml/ns/javaee" xmlns:javaee="http://java.sun.com/xml/ns/javaee"> 

  <xs:element name="beans">
    <xs:annotation>
      <xs:documentation>
        Bean classes of enabled beans must be
        deployed in bean archives. A library jar, EJB jar,
        application client jar or rar archive is a bean archive if
        it has a file named beans.xml in the META-INF directory. The
        WEB-INF/classes directory of a war is a bean archive if
        there is a file named beans.xml in the WEB-INF directory of
        the war. A directory in the JVM classpath is a bean archive
        if it has a file named beans.xml in the META-INF directory.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="javaee:interceptors" />
        <xs:element ref="javaee:decorators" />
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>

  <xs:element name="interceptors">
    <xs:annotation>
      <xs:documentation>
        By default, a bean archive has no enabled
        interceptors bound via interceptor bindings. An interceptor
        must be explicitly enabled by listing its class under the
        &lt;interceptors&gt; element of the beans.xml file of the
        bean archive. The order of the interceptor declarations
        determines the interceptor ordering. Interceptors which
        occur earlier in the list are called first. If the same
        class is listed twice under the &lt;interceptors&gt;
        element, the container automatically detects the problem and
        treats it as a deployment problem.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="class" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              Each child &lt;class&gt; element
              must specify the name of an interceptor class. If
              there is no class with the specified name, or if
              the class with the specified name is not an
              interceptor class, the container automatically
              detects the problem and treats it as a deployment
              problem.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>

  <xs:element name="decorators">
    <xs:annotation>
      <xs:documentation>
        By default, a bean archive has no enabled
        decorators. A decorator must be explicitly enabled by
        listing its bean class under the &lt;decorators&gt; element
        of the beans.xml file of the bean archive. The order of the
        decorator declarations determines the decorator ordering.
        Decorators which occur earlier in the list are called first.
        If the same class is listed twice under the
        &lt;decorators&gt; element, the container automatically
        detects the problem and treats it as a deployment problem.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="class" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              Each child &lt;class&gt; element
              must specify the name of a decorator class. If
              there is no class with the specified name, or if
              the class with the specified name is not a
              decorator class, the container automatically
              detects the problem and treats it as a deployment
              problem.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
